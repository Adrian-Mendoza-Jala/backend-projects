// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SkillMasteryAPI.Infrastructure.Data;

#nullable disable

namespace SkillMasteryAPI.Infrastructure.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SkillMasteryAPI.Domain.Entities.Goal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SkillId");

                    b.ToTable("Goals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 2, 16, 16, 57, 29, 144, DateTimeKind.Utc).AddTicks(665),
                            Deadline = new DateTime(2024, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Complete a basic programming course",
                            SkillId = 1,
                            Status = 1,
                            UpdatedAt = new DateTime(2024, 2, 16, 16, 57, 29, 144, DateTimeKind.Utc).AddTicks(665)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 2, 16, 16, 57, 29, 144, DateTimeKind.Utc).AddTicks(672),
                            Deadline = new DateTime(2024, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Design a user interface for a mobile app",
                            SkillId = 2,
                            Status = 0,
                            UpdatedAt = new DateTime(2024, 2, 16, 16, 57, 29, 144, DateTimeKind.Utc).AddTicks(672)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 2, 16, 16, 57, 29, 144, DateTimeKind.Utc).AddTicks(673),
                            Deadline = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Optimize database performance",
                            SkillId = 3,
                            Status = 1,
                            UpdatedAt = new DateTime(2024, 2, 16, 16, 57, 29, 144, DateTimeKind.Utc).AddTicks(674)
                        });
                });

            modelBuilder.Entity("SkillMasteryAPI.Domain.Entities.Progress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Milestones")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SkillId");

                    b.ToTable("Progresses", (string)null);
                });

            modelBuilder.Entity("SkillMasteryAPI.Domain.Entities.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Skills", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 2, 16, 16, 57, 29, 144, DateTimeKind.Utc).AddTicks(481),
                            Description = "The ability to write computer programs",
                            Name = "Programming",
                            UpdatedAt = new DateTime(2024, 2, 16, 16, 57, 29, 144, DateTimeKind.Utc).AddTicks(484)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 2, 16, 16, 57, 29, 144, DateTimeKind.Utc).AddTicks(486),
                            Description = "The ability to create designs for user interfaces",
                            Name = "Design",
                            UpdatedAt = new DateTime(2024, 2, 16, 16, 57, 29, 144, DateTimeKind.Utc).AddTicks(486)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 2, 16, 16, 57, 29, 144, DateTimeKind.Utc).AddTicks(487),
                            Description = "The ability to manage and maintain database management systems",
                            Name = "Database",
                            UpdatedAt = new DateTime(2024, 2, 16, 16, 57, 29, 144, DateTimeKind.Utc).AddTicks(488)
                        });
                });

            modelBuilder.Entity("SkillMasteryAPI.Domain.Entities.Goal", b =>
                {
                    b.HasOne("SkillMasteryAPI.Domain.Entities.Skill", "Skill")
                        .WithMany()
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("SkillMasteryAPI.Domain.Entities.Progress", b =>
                {
                    b.HasOne("SkillMasteryAPI.Domain.Entities.Skill", "Skill")
                        .WithMany()
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Skill");
                });
#pragma warning restore 612, 618
        }
    }
}
